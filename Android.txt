Android Hacking

https://developer.android.com/studio/run/emulator-networking -- to setup Emulator networking

Prerequisite : Android studio on windows
               parrot os

Drozer 
Frida
X-posed
L-posed sub time 

ssl pining bypass

security measure use to prevent mitm 


dir to list directory
 use only no playstore device
 
Where to find the data of android 
C:\Users\abhi\Appdata\Local\Android\Sdk\emulator

avd - android virtual device  to run emulator from cli

emulator.exe -list-avds

emulator.exe -avd mobile device name

ADB - Android debug Bridge

How to access platform  tools
first go into the platform-tools dir
C\Users<your username>\AppDatalLocal\Android|Sdk|platform-tools

then enter   adb.exe devices            (after checking device)
adb.exe shell

cd storage/self/primary/        to go for storages


to upload downlod in android 
adb.exe push (upload file from PC to phone)
adb.exe pull (download file from phone to PC)

adb.exe push < location of file on PC> <destination on phone>
adb.exe push C:\Users\Ben\Desktop\test.txt /storage/self/primary/

To run adb in linux is to download
sudo apt-get install adb 
adb devices 

adb connect 10.0.2.2:5555
to connect through linux to android studio

How to Decompile apk

Tools : apktool 
sudo apt-get install apktool
apktool d apkname      --- to decompile apk


jadx ---same tools as apktool which can be use to decompile application
https://github.com/skylot/jadx
sudo apt-get install jadx
jadx-gui   to see in gui version 

CyberChef   --- Use to decode base64 text
https://gchq.github.io/CyberChef/


Location to keep in mind
/res/
/assets/
AndroidManifest.xml

Steps to install Burp-suite certificate on emulator 

emulator.exe -avd ‹ name of AVD> -writable-system

openssl use to convert certificate value in cryptography
openssl x509 -inform DER -in ‹cert name>.der -out ‹new name>.pem

openssl x509 -inform PEM -subject_hash_old -in <cert name>.pem | head -1
after getting the head for the file
mv burpsuite.pem headname


platform tools --    adb.exe shell
                     cd /sdcard/
                     exit
					 adb.exe root
					 adb.exe remount
					 adb.exe shell
					 cd /sdcard/
					 mv certifcicate /system/etc/security/cacerts/
					 cd /system/etc/security/cacerts/
					 ls
					 chmod 644 name of cert
					 now reboot your device
		
	TO make android listing to proxy address
	emulator.exe-avd ‹name of AVD> -writable-system -http-proxy <IP and port of listener>
	
	manually use the alias ip    10.0.2.2


/data/data  -  to view the data in application
inotifyd - /data/data/apkname
diff -r   - to get the directory added details

Hack app with Drozer -- To be Continued later
https://hub.docker.com/r/fsecurelabs/drozer


SSL Pinning requires rooted device

these needs to  be download in linux
pip install frida
pip install objection
pip install frida-tools

these needs to be stored in android
adb shell getprop ro.product.pu.abi    -- to get info about the architecture
if your android is x86 download the file according to it
frida server x86 file
xz -d frida server file   -- to unzip it 
adb push frida-server /data/local/tmp
adb shell "chmod +x /data/local/tmp/frida-server"
adb shell "/data/local/tmp/frida-server" &     
& -- to background the cmd
frida-ps -U      --- Check the processes which are running in our emulator


frida codeshare
https;//codeshare.frida.reboot

frida --codeshare sowdust/universal-android-ssl-pinning-bypass-2 -U -f com.twitter.android        
the above cmd runs the ssl pinning script

to connect adb with linux use the 
adb connect 10.0.2.2:5555

bypass ssl pinning without root device
objection patchapk -s downloaded apk name
sudo apt install apksigner
sudo apt install zipalign

apktool --version    dirty -- is not stable version
sudo apk-get purge apktool
download the latest apktool from the github
https://ibotpeaches.github.io/Apktool/install

mv apktool /usr/local/bin/
sudo !!
sudo mv apktool jar /usr/local/bin/apktool
sudo mv apktool jar /usr/local/bin/apktool.jar
now check for apktool --version
adb install apk name to be tested
objection explore

now type
android ssl pinning disable

rohit@Rohits-MacBook-Pro platform-tools % sudo pip3 install frida frida-tools objection
Password: °|        to install in windows

Objection is a runtime mobile exploration toolkit for Android apps. 
It allows security professionals to assess mobile applications without requiring a jailbroken
or rooted device. Objection simplifies tasks like inspecting file systems, bypassing SSL pinning,
and analyzing memory. It leverages Frida to interact with the app’s runtime environment for security 
assessment purposes. 
installation in noxplayer
pip3 install frida
pip3 install frida-tools
pip3 install objections
after downloading burp cert change it to burp.cert and then install in phone
open nox bin directory for execution
chmod +x frida server
objection --gadget "applicationname" explore
xposed install in phone -- to do ssl pinning without use of frida

Android pt with drozer
Drozer allows you to assume the role of an Android app
and interact with other apps.
Drozer also helps to you to remotely exploit Android
devices, by building malicious files or web pages that
exploit known vulnerabilities. The payload that is used in
these exploits is a rogue drozer agent that is essentially a
remote administration tool.

what is ssl pinning
The client will only trust the server if the server can provide a valid certificate that is
signed by one of the trusted Certificate Authorities that come pre-installed in the
client, otherwise, the connection will be aborted

How SSL Pinning can be fooled
An attacker can abuse this mechanism by either install a malicious root CA certificate
to user devices so the client will trust all certificates that are signed by the attacker.
Therefore it is vulnerable to a potential man-in-the-middle attack
